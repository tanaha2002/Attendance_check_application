/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.border.MatteBorder;

import dao.BangPhanCongCongNhanDAO;
import dao.SanPhamDAO;
import entity.BangChamCongCongNhan;
import entity.BangPhanCongCongNhan;
import entity.NhanVien;
import entity.SanPham;
import setting.PathSetting;
import tablemodels.SanPhamTableModel;

public class QuanLySP extends javax.swing.JPanel {

	/**
	 * Creates new form QuanLyNV
	 */
	private SanPhamDAO sanPhamDAO;
	private SanPhamTableModel sanPhamTableModel;
	private List<SanPham> dsSP;
	private boolean trangThaiThem;
	private static final String[] HEADERS = {"Mã sản phẩm", "Tên sản phẩm" , "Số lượng công đoạn", "Giá tiền", "Số lượng sản xuất", "Chất liệu", "Kích thước"};
	private BangPhanCongCongNhanDAO phanCongDAO;
	private NhanVien nhanVienLogin;
	public QuanLySP(NhanVien nvLogin) {
		phanCongDAO = new BangPhanCongCongNhanDAO();
		sanPhamDAO = new SanPhamDAO();
		this.nhanVienLogin = nvLogin;
		initComponents();
		listenerInput();
		themSuKien();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void setWidthTable() {
    	if (tblSanPham.getColumnModel().getColumnCount() > 0) {

    		tblSanPham.getColumnModel().getColumn(0).setMinWidth(200);
    		tblSanPham.getColumnModel().getColumn(1).setMinWidth(280);
    		tblSanPham.getColumnModel().getColumn(2).setMinWidth(60);
    		tblSanPham.getColumnModel().getColumn(3).setMinWidth(200);
    		tblSanPham.getColumnModel().getColumn(4).setMinWidth(150);
    		tblSanPham.getColumnModel().getColumn(5).setMinWidth(190);
    		tblSanPham.getColumnModel().getColumn(6).setMinWidth(100);
		}
    }
	private void listenerInput(){
		txtGiaTien.addKeyListener(new SoKeyListener());
        txtSoLuong.addKeyListener(new SoKeyListener());
    }
	
	private void updateModelTable(List<SanPham> dsSP,String[] headers) {
    	sanPhamTableModel = new SanPhamTableModel(headers, dsSP);
    	tblSanPham.setModel(sanPhamTableModel);
    	setWidthTable();
    	tblSanPham.updateUI();
    }
    
	private void batTextfield() {
    	txtMaSanPham.setEditable(true);
    	txtTenSanPham.setEditable(true);
    	txtGiaTien.setEditable(true);
    	txtSoLuong.setEditable(true);
    	txtSoLuongCongDoan.setEditable(false);
    	txaMoTaSP.setEditable(true);
    	cmbKichThuoc.setEnabled(true);
    	cmbChatLieu.setEnabled(true);
    	btnChonAnh.setEnabled(true);
    }
	
	private void tatTextfield() {
		txtMaSanPham.setEditable(false);
    	txtTenSanPham.setEditable(false);
    	txtGiaTien.setEditable(false);
    	txtSoLuong.setEditable(false);
    	txtSoLuongCongDoan.setEditable(false);
    	txaMoTaSP.setEditable(false);
    	cmbKichThuoc.setEnabled(false);
    	cmbChatLieu.setEnabled(false);
    	btnChonAnh.setEnabled(false);
    }
    
    private void xoaRong() {
    	txtTenSanPham.setText("");
    	txtGiaTien.setText("");
    	txaMoTaSP.setText("");
    	txtSoLuong.setText("");
    	cmbChatLieu.setSelectedIndex(0);
    	cmbKichThuoc.setSelectedIndex(0);
    	lblAnhDaiDien.setIcon(new javax.swing.ImageIcon(PathSetting.PATH_IMAGE_SANPHAM + "noimage.png"));
	}
    
    private boolean kiemTraDuLieuNhap() {
    	boolean kt = true;
    	if (this.txtTenSanPham.getText().isBlank()) {
    		JOptionPane.showMessageDialog(null, "Không để trống tên sản phẩm!!");
    		txtTenSanPham.requestFocus();
            kt = false;
        } else if (this.txtGiaTien.getText().isBlank()) {
    		JOptionPane.showMessageDialog(null, "Không để trống giá tiền!!");
    		txtGiaTien.requestFocus();
            kt = false;
        } else if(!this.txtGiaTien.getText().matches("^(?=.*\\d)\\d*(\\.\\d+)?$")) {
        	JOptionPane.showMessageDialog(null, "Vui lòng chỉ nhập ký tự số");
        	txtGiaTien.setText("");
        	txtGiaTien.requestFocus();
            kt = false;
        } else if(Double.parseDouble(txtGiaTien.getText().trim()) <=0) {
        	JOptionPane.showMessageDialog(null, "Giá tiền phải lớn hơn 0");
        	txtGiaTien.setText("");
        	txtGiaTien.requestFocus();
            kt = false;
        }  else if(Double.parseDouble(txtGiaTien.getText().trim()) > 1000000) {
        	JOptionPane.showMessageDialog(null, "Không nhập giá tiền quá 1,000,000");
        	txtGiaTien.setText("");
        	txtGiaTien.requestFocus();
            kt = false;
        } else if (this.txtSoLuong.getText().isBlank()) {
    		JOptionPane.showMessageDialog(null, "Không để trống số lượng!!");
    		txtSoLuong.requestFocus();
            kt = false;
        } else if(!this.txtSoLuong.getText().matches("[\\d+\\s]*")) {
        	JOptionPane.showMessageDialog(null, "Vui lòng chỉ nhập ký tự số");
        	txtSoLuong.setText("");
        	txtSoLuong.requestFocus();
            kt = false;
        } else if(Integer.parseInt(txtSoLuong.getText().trim()) <= 0) {
        	JOptionPane.showMessageDialog(null, "Số lượng phải lớn hơn 0");
        	txtSoLuong.setText("");
        	txtSoLuong.requestFocus();
            kt = false;
        } else if(Integer.parseInt(txtSoLuong.getText().trim()) > 10000) {
        	JOptionPane.showMessageDialog(null, "Không nhập sô lượng quá 10000");
        	txtSoLuong.setText("");
        	txtSoLuong.requestFocus();
            kt = false;
        }
    	return kt;	
    }
    
    private SanPham getDuLieuTuTextField() throws Exception {
    	if (kiemTraDuLieuNhap()) {
    		String maSP = txtMaSanPham.getText().trim();
    		String tenSP = txtTenSanPham.getText().trim();
    		Double giaTien = Double.parseDouble(txtGiaTien.getText().trim());
    		int soLuong = Integer.parseInt(txtSoLuong.getText());
    		String moTa = txaMoTaSP.getText().trim();
    		int soLuongCD = Integer.parseInt(txtSoLuongCongDoan.getText().trim());
    		String chatLieu = cmbChatLieu.getSelectedItem().toString();
    		String kichThuoc = cmbKichThuoc.getSelectedItem().toString();
    		String hinhAnh  = lblAnhDaiDien.getIcon().toString();
    		hinhAnh = hinhAnh.replace(PathSetting.PATH_IMAGE_SANPHAM,"" );
    		SanPham sanPham = new SanPham(maSP, tenSP, giaTien, moTa, soLuong, chatLieu, kichThuoc, hinhAnh, soLuongCD);
    		return sanPham;
    	}
		return null;
	}
    
	private void themSuKien() {
		dsSP = sanPhamDAO.layDanhSachSanPham();
        updateModelTable(dsSP, HEADERS);
        if (tblSanPham.getColumnModel().getColumnCount() > 0) {
        	tblSanPham.getColumnModel().getColumn(6).setMinWidth(320);

		}
        tblSanPham.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				// TODO Auto-generated method stub
				String item = (String) tblSanPham.getModel().getValueAt(tblSanPham.getSelectedRow(), 0);
				if (item != null) {
					SanPham sp = null;
					try {
						if(!trangThaiThem) {
							sp = sanPhamDAO.timSanPham(item);
							fillThongTinSanPham(sp);
						}
					} catch (Exception e1) {
						e1.printStackTrace();
					}

				}
			}

			private void fillThongTinSanPham(SanPham sp) throws Exception {
				// TODO Auto-generated method stub
				txtTenSanPham.setText(sp.getTenSanPham());
				txtMaSanPham.setText(sp.getMaSanPham());
				txtGiaTien.setText(String.valueOf(sp.getGiaTien()));
				txtSoLuong.setText(String.valueOf(sp.getSoLuongSanXuat()));
				cmbChatLieu.setSelectedItem(sp.getChatLieu());
				cmbKichThuoc.setSelectedItem(sp.getKichThuoc());
				txtSoLuongCongDoan.setText(String.valueOf(sp.getSoLuongCongDoan()));
				txaMoTaSP.setText(sp.getMoTa());
				lblAnhDaiDien.setIcon(new ImageIcon(PathSetting.PATH_IMAGE_SANPHAM + sp.getAnhSP()));
				lblAnhDaiDien.updateUI();
			}
		});
        
        btnHuongDan.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					btnHuongDanActionPerformed(e);

				} catch (Exception e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}
			}
				private void btnHuongDanActionPerformed(ActionEvent evt) throws Exception {
			        ImageIcon imageIcon = new ImageIcon(setting.PathSetting.PATH_IMAGE_HUONGDAN + "ThemSP1.jpg");
			        ImageIcon imageIcon1 = new ImageIcon(setting.PathSetting.PATH_IMAGE_HUONGDAN + "ThemSP2.jpg");
			        
			        JPanel imagePanel = new JPanel();
			        imagePanel.setLayout(new BoxLayout(imagePanel, BoxLayout.Y_AXIS));
			        
			        JLabel imageLabel1 = new JLabel(imageIcon);
			        imagePanel.add(imageLabel1);
			        JLabel imageLabel2 = new JLabel(imageIcon1);
			        imagePanel.add(imageLabel2);
			        JScrollPane scrollPane = new JScrollPane(imagePanel);
			        scrollPane.setPreferredSize(new Dimension(1200, 700));
			        
			        scrollPane.getVerticalScrollBar().setUnitIncrement(20);
			        scrollPane.getVerticalScrollBar().setBlockIncrement(100);
			        
			        JOptionPane.showMessageDialog(null, scrollPane, "Hướng dẫn thêm sản phẩm", JOptionPane.PLAIN_MESSAGE);
				}
			});
        
//      bat su kien nut them
        btnThem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
						btnThemActionPerformed(e);
				} catch (Exception e2) {
					// TODO: handle exception
				}
				
			}
			private void btnThemActionPerformed(ActionEvent evt) throws Exception{
				xoaRong();
				batTextfield();
				txtMaSanPham.setText(getNewMaSP());
				txtMaSanPham.setEditable(false);
				txtSoLuongCongDoan.setText("0");
				trangThaiThem = true;
		        pnlChucNangTo.removeAll();
		        pnlChucNangTo.setLayout(new BorderLayout());
		        PanelXacNhan pnlXacNhan = new PanelXacNhan();
		        pnlChucNangTo.add(pnlXacNhan);
		
		        ActionListener listenerHuy = new java.awt.event.ActionListener() {
		            public void actionPerformed(java.awt.event.ActionEvent evt) {
		                tatTextfield();
		            	trangThaiThem = false;
		                pnlChucNangTo.removeAll();
		                pnlChucNangTo.setLayout(new BorderLayout());
		                pnlChucNangTo.add(pnlChucNang);
		                pnlChucNangTo.updateUI();
		            }
		        };

		        ActionListener listenerXoaRong = new java.awt.event.ActionListener() {
		            public void actionPerformed(java.awt.event.ActionEvent evt) {
		                xoaRong();
		            }
		        };
		        
		        ActionListener listenerThem = new ActionListener() {
					
					@Override
					public void actionPerformed(ActionEvent e) {
						try {
							SanPham sanPham = getDuLieuTuTextField();
							if(sanPham != null) {
								sanPhamDAO.themSanPham(sanPham);
								dsSP = sanPhamDAO.layDanhSachSanPham();
								updateModelTable(dsSP, HEADERS);
								txtMaSanPham.setText(getNewMaSP());
								xoaRong();
								JOptionPane.showMessageDialog(null, "Thêm thành công");
							}
						} catch (Exception e2) {
							e2.printStackTrace();
							// TODO: handle exception
						}
						
					}
//					@SuppressWarnings("deprecation")
					
				};
		        pnlXacNhan.huyAddActionListener(listenerHuy);
		        pnlXacNhan.xacNhanAddActionListener(listenerThem);
		        pnlXacNhan.xoaRongAddActionListener(listenerXoaRong);
		        pnlChucNangTo.repaint();
		        pnlChucNangTo.revalidate();
		        
			}
			private String getNewMaSP() throws Exception {
				String maSP = sanPhamDAO.getMaSanPhamCaoNhat();
				int maSPt = 1;
				if (maSP != null)
					maSPt = Integer.parseInt(maSP.replaceAll("\\D+", "")) + 1;
				return String.format("SP%06d", maSPt);
			}
		});
        
        btnChonAnh.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// TODO Auto-generated method stub
				JFileChooser j = new JFileChooser("icon\\SanPham");
				int r = j.showSaveDialog(null);
				if (r == JFileChooser.APPROVE_OPTION)
					lblAnhDaiDien.setIcon(new javax.swing.ImageIcon(j.getSelectedFile().getAbsolutePath()));
			}
		});
//        xoa san pham
        btnXoa.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				try {
						btnXoaActionPerformed(e);
					
				} catch (Exception e2) {
					// TODO: handle exception
					e2.printStackTrace();
				}

			}
			private void btnXoaActionPerformed(ActionEvent e) {
				int selectedRow = tblSanPham.getSelectedRow();
		        if (selectedRow == -1) {
		            JOptionPane.showMessageDialog(null, "Chọn sản phẩm cần xóa");
		            return;
		        }
				try {
					String maXoa = (String) tblSanPham.getModel().getValueAt(tblSanPham.getSelectedRow(), 0);
					List<BangPhanCongCongNhan> dsPhanCong = phanCongDAO.layDanhSachPhanCongCN();
					
					if (!phanCongDAO.checkSanPhamInBangChamCong(maXoa)) {
		                JOptionPane.showMessageDialog(null, "Không thể xóa sản phẩm vì sản phẩm này đang có công đoạn được phân công");
		                return;
		            }
					
					int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa không", "Xóa",
							JOptionPane.YES_OPTION, JOptionPane.NO_OPTION);
					if (luaChon == JOptionPane.YES_OPTION) {
						boolean ketQua = sanPhamDAO.xoaSanPham(maXoa);
						if (ketQua) {
							dsSP = sanPhamDAO.layDanhSachSanPham();
							updateModelTable(dsSP, HEADERS);
							xoaRong();
							JOptionPane.showMessageDialog(null, "Xóa thành công");
						}
					}
				} catch (Exception e1) {
					e1.printStackTrace();
				}
			}
		});
//        sua san pham
        btnSua.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
					btnSuaActionPerformed(evt);
			}
		    private void btnSuaActionPerformed(ActionEvent evt) {
		        // TODO add your handling code here:
		    	batTextfield();
		    	txtMaSanPham.setEditable(false);
		        pnlChucNangTo.removeAll();
		        pnlChucNangTo.setLayout(new BorderLayout());
		        PanelXacNhan pnlXacNhan = new PanelXacNhan();
		        pnlChucNangTo.add(pnlXacNhan);
		
		        ActionListener listenerHuy = new ActionListener() {
		            public void actionPerformed(ActionEvent evt) {
		                System.out.println("ok");
		            	trangThaiThem = false;
		                pnlChucNangTo.removeAll();
		                pnlChucNangTo.setLayout(new BorderLayout());
		                pnlChucNangTo.add(pnlChucNang);
		                pnlChucNangTo.updateUI();
		                tatTextfield();
		            }
		        };
		        
		        ActionListener listenerXoaRong = new java.awt.event.ActionListener() {
		            public void actionPerformed(java.awt.event.ActionEvent evt) {
		            	txtTenSanPham.setText("");
		            	txtGiaTien.setText("");
		            	txaMoTaSP.setText("");
		            	txtSoLuong.setText("");
		            	txtSoLuongCongDoan.setText("");
		            	lblAnhDaiDien.setIcon(new javax.swing.ImageIcon(PathSetting.PATH_IMAGE_NHANVIEN + "noimage.png"));
		            }
		        };
		        
		        ActionListener listenerSua = new ActionListener() {
					
					@Override
					public void actionPerformed(ActionEvent e) {
						// TODO Auto-generated method stub
						try {
							SanPham sanPham = getDuLieuTuTextField();
							String maSua = sanPham.getMaSanPham();
							if (!phanCongDAO.checkSanPhamInBangChamCong(maSua)) {
				                JOptionPane.showMessageDialog(null, "Không thể sửa sản phẩm vì sản phẩm đang trong quá trình sản xuất");
				                return;
				            }
							if(sanPham != null) {
								int luaChon = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn sửa không", "Sửa",
										JOptionPane.YES_OPTION, JOptionPane.NO_OPTION);
								if (luaChon == JOptionPane.YES_OPTION) {

									boolean ketQua = sanPhamDAO.capNhatSanPham(sanPham);
									if (ketQua) {
										dsSP = sanPhamDAO.layDanhSachSanPham();
										updateModelTable(dsSP, HEADERS);
										JOptionPane.showMessageDialog(null, "Thông tin của sản phẩm đã được cập nhật");
									}
								}
							}
						} catch (Exception e2) {
							// TODO: handle exception
							e2.printStackTrace();
						}
						
					}
					
				};
		        pnlXacNhan.huyAddActionListener(listenerHuy);
		        pnlXacNhan.xacNhanAddActionListener(listenerSua);
		        pnlXacNhan.xoaRongAddActionListener(listenerXoaRong);
		        pnlChucNangTo.repaint();
		        pnlChucNangTo.revalidate();

		    	
		    }
		});

	}
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlQLSP = new javax.swing.JPanel();
        lblMaSanPham = new javax.swing.JLabel();
        lblTenSanPham = new javax.swing.JLabel();
        lblGiaTien = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        txtGiaTien = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        lblChatLieu = new javax.swing.JLabel();
        lblKichThuoc = new javax.swing.JLabel();
        lblSoLuongCongDoan = new javax.swing.JLabel();
        cmbChatLieu = new javax.swing.JComboBox<>();
        cmbKichThuoc = new javax.swing.JComboBox<>();
        lblTieuDe = new javax.swing.JLabel();
        lblAnhDaiDien = new javax.swing.JLabel();
        scrTableSanPham = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnChonAnh = new javax.swing.JButton();
        pnlChucNangTo = new javax.swing.JPanel();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtSoLuongCongDoan = new javax.swing.JTextField();
        lblMoTa = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaMoTaSP = new javax.swing.JTextArea();
        btnHuongDan = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        pnlQLSP.setBackground(new java.awt.Color(255, 255, 255));
        pnlQLSP.setPreferredSize(new java.awt.Dimension(1250, 475));

        lblMaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMaSanPham.setText("Mã sản phẩm:");

        lblTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblTenSanPham.setText("Tên sản phẩm:");

        lblGiaTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblGiaTien.setText("Giá tiền:");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEmail.setText("Số lượng:");

        txtMaSanPham.setEditable(false);
        txtMaSanPham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtMaSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtMaSanPham.setBorder(new MatteBorder(0, 0, 1, 0, Color.BLACK));

        txtTenSanPham.setEditable(false);
        txtTenSanPham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTenSanPham.setBorder(null);
        txtTenSanPham.setBorder(new MatteBorder(0, 0, 1, 0, Color.BLACK));

        txtGiaTien.setEditable(false);
        txtGiaTien.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtGiaTien.setBorder(null);
        txtGiaTien.setBorder(new MatteBorder(0, 0, 1, 0, Color.BLACK));

        txtSoLuong.setEditable(false);
        txtSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSoLuong.setBorder(null);
        txtSoLuong.setBorder(new MatteBorder(0, 0, 1, 0, Color.BLACK));

        lblChatLieu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblChatLieu.setText("Chất liệu:");

        lblKichThuoc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblKichThuoc.setText("Kích thước:");

        lblSoLuongCongDoan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblSoLuongCongDoan.setText("Số lượng công đoạn:");

        cmbChatLieu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbChatLieu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vải cotton", "Vải da", "Vải thun", "Vải len", "Vải jean", "Vải denim" }));
        cmbChatLieu.setEnabled(false);

        cmbKichThuoc.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        cmbKichThuoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S", "M", "L", "XL", "XXL", "3XL", "4XL" }));
        cmbKichThuoc.setEnabled(false);

        lblTieuDe.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("QUẢN LÝ SẢN PHẨM");

        lblAnhDaiDien.setBackground(new java.awt.Color(0, 204, 153));
        lblAnhDaiDien.setForeground(new java.awt.Color(0, 255, 204));

        scrTableSanPham.setBackground(new java.awt.Color(255, 255, 255));
        scrTableSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 16))); // NOI18N

        tblSanPham.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblSanPham.setSelectionBackground(new java.awt.Color(51, 153, 255));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        scrTableSanPham.setViewportView(tblSanPham);

        btnChonAnh.setText("Hình ảnh");
        btnChonAnh.setEnabled(false);

        pnlChucNangTo.setBackground(new java.awt.Color(255, 255, 255));
        pnlChucNangTo.setLayout(new java.awt.BorderLayout());

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnlChucNang.setPreferredSize(new java.awt.Dimension(698, 57));

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-add-20.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout pnlChucNangLayout = new javax.swing.GroupLayout(pnlChucNang);
        pnlChucNang.setLayout(pnlChucNangLayout);
        pnlChucNangLayout.setHorizontalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChucNangLayout.createSequentialGroup()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 99, Short.MAX_VALUE)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        pnlChucNangLayout.setVerticalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChucNangLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pnlChucNangTo.add(pnlChucNang, java.awt.BorderLayout.CENTER);

        txtSoLuongCongDoan.setEditable(false);
        txtSoLuongCongDoan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtSoLuongCongDoan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtSoLuongCongDoan.setBorder(new MatteBorder(0, 0, 1, 0, Color.BLACK));

        lblMoTa.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMoTa.setText("Mô tả:");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txaMoTaSP.setEditable(false);
        txaMoTaSP.setBackground(new java.awt.Color(255, 255, 255));
        txaMoTaSP.setColumns(20);
        txaMoTaSP.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txaMoTaSP.setRows(5);
        jScrollPane1.setViewportView(txaMoTaSP);

        btnHuongDan.setFont(new java.awt.Font("Segoe UI", 1, 34)); // NOI18N
        btnHuongDan.setText("?");

        javax.swing.GroupLayout pnlQLSPLayout = new javax.swing.GroupLayout(pnlQLSP);
        pnlQLSP.setLayout(pnlQLSPLayout);
        pnlQLSPLayout.setHorizontalGroup(
            pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLSPLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblMaSanPham)
                        .addGap(9, 9, 9)
                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblTenSanPham)
                        .addGap(6, 6, 6)
                        .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblGiaTien)
                        .addGap(58, 58, 58)
                        .addComponent(txtGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblEmail)
                        .addGap(44, 44, 44)
                        .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblChatLieu)
                        .addGap(49, 49, 49)
                        .addComponent(cmbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlChucNangTo, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblKichThuoc)
                        .addGap(12, 12, 12)
                        .addComponent(cmbKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addComponent(lblSoLuongCongDoan)
                        .addGap(31, 31, 31)
                        .addComponent(txtSoLuongCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblMoTa)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblAnhDaiDien, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(248, 248, 248)
                .addComponent(btnHuongDan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scrTableSanPham)
        );
        pnlQLSPLayout.setVerticalGroup(
            pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlQLSPLayout.createSequentialGroup()
                .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlQLSPLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblMaSanPham)
                                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(22, 22, 22)
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTenSanPham)
                                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(20, 20, 20)
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblGiaTien)
                                            .addComponent(txtGiaTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblEmail)
                                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(26, 26, 26)
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlQLSPLayout.createSequentialGroup()
                                                .addGap(3, 3, 3)
                                                .addComponent(lblChatLieu))
                                            .addComponent(cmbChatLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(13, 13, 13)
                                        .addComponent(pnlChucNangTo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlQLSPLayout.createSequentialGroup()
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblKichThuoc)
                                            .addComponent(cmbKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(22, 22, 22)
                                        .addGroup(pnlQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSoLuongCongDoan)
                                            .addComponent(txtSoLuongCongDoan, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(lblMoTa)
                                        .addGap(6, 6, 6)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlQLSPLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnHuongDan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlQLSPLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblAnhDaiDien, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(btnChonAnh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(scrTableSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlQLSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1721, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlQLSP, javax.swing.GroupLayout.DEFAULT_SIZE, 791, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked

	}//GEN-LAST:event_tblSanPhamMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JButton btnHuongDan;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cmbChatLieu;
    private javax.swing.JComboBox<String> cmbKichThuoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnhDaiDien;
    private javax.swing.JLabel lblChatLieu;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGiaTien;
    private javax.swing.JLabel lblKichThuoc;
    private javax.swing.JLabel lblMaSanPham;
    private javax.swing.JLabel lblMoTa;
    private javax.swing.JLabel lblSoLuongCongDoan;
    private javax.swing.JLabel lblTenSanPham;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlChucNangTo;
    private javax.swing.JPanel pnlQLSP;
    private javax.swing.JScrollPane scrTableSanPham;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txaMoTaSP;
    private javax.swing.JTextField txtGiaTien;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtSoLuongCongDoan;
    private javax.swing.JTextField txtTenSanPham;
    // End of variables declaration//GEN-END:variables
}
